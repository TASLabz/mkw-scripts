This file contain some information about the TimeDifference scripts in infodisplay.

In infodisplay.ini, you can chose to display or not each time difference calculation.

In infodisplay.ini, "timediff setting" is a setting with 4 possible value :
	"player" which will use the TimeDifference (Player -> Ghost)
	"ghost" which will use the TimeDifference (Ghost -> Player)
	"ahead" which will use the TimeDifference (the one ahead -> the one behind)
	"behind" which will use the TimeDifference (the one behind -> the one ahead)
	any other value will default to "player".

In infodisplay.ini "history size" is a setting used for the TimeDifference RaceComp.
history size = 200 means the TimeDiff RaceComp can at best detect a timedifference of 200 frames or less.
It uses memory, so don't use an unecessary large number.

Some TimeDifference calculations are not symmetrical. It means this calculation gives different result
for the time difference between the ghost and the player, and between the player and the ghost. 
Here's an example : For the TimeDifference Absolute (Player1 -> Player2) : 
	We take Player1's speed, we take the distance between both players.
	And we simply define the TimeDiff as the distance divided by the speed.
	Player1 and Player2 have asymmetrical roles in the calculation. 
	Therefore : we talk about the timedifference from Player1 to Player2 (and not the timedifference between Player1 and Player2)

This is how each one is calculated : 

-TimeDifference Absolute (P1 -> P2) (Not very relevant imo)
	Take S1 the speed of P1
	Take D the distance between P1 and P2
	Return D / S1

-TimeDifference Relative (P1 -> P2) (A bit more relevant maybe)
	Take S1 the speed of P1 directed "toward" P2. (mathematically, it's a dot product)
	Take D the distance between P1 and P2
	Return D / S1

-TimeDifference Projected (P1 -> P2) (A good one for short distances)
	Take S1 the speed of P1
	Take D the distance represented here : https://blounard.s-ul.eu/iMDYhZDI.png
	Return D / S1

-TimeDifference CrossPath (P1 -> P2) (Another good one for short distances)
this one is symmetrical
	With the notation here : https://blounard.s-ul.eu/WYbotlks.png
	Calculate t1 = TimeDifference (P1 -> C) (in this case, all 3 above timedifference formula will give the same result)
	Calculate t2 = TimeDifference (P2 -> C) (--------------------------------------------------------------------------)
	Return t1-t2

-TimeDifference ToFinish (P1 -> P2) (Perfectly precise when both player are going straight to the finish line at constant speed. Useless otherwise)
this one is symmetrical	
	Calculate t1, the time needed for P1 to cross the finish line if P1 keep going at a constant speed.
	Calculate t2, the time needed for P2 to cross the finish line if P2 keep going at a constant speed.
	Return t1-t2

-TimeDifference RaceComp (P1 -> P2) (Useful even for long distances. Based on RaceCompletion data. Has several flaws)
this one is symmetrical
	Store in memory the racecompletion data for both players for the last few frames.
	Make the player ahead go "back in time" until it's behind the other player.
	How much frame you had to go "back in time" is how much frame the player was ahead.